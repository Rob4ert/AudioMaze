{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/dev/audiomaze/AudioMaze/client/src/Components/Podcast.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Container.css\";\nimport { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport Waveform from './Waveform.js';\nimport Player from \"./Player\";\nimport Stars from \"./Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Podcast() {\n  _s();\n\n  var _one$episodes;\n\n  const [one, setEach] = useState([]);\n  const initial = 1;\n  const [current, setCurrent] = useState(initial); // /=============================================/ API\n\n  const getEach = async () => {\n    const response = await fetch(\"http://localhost:3001/podcasts/93\");\n    const data = await response.json();\n    setEach(data);\n    console.log(data);\n    return data;\n  };\n\n  function setPlayer(episodes) {\n    setCurrent(episodes);\n    console.log(current);\n  }\n\n  function play() {\n    console.log('play is working');\n    const test = `https://www.listennotes.com/e/p/${current}/`;\n    console.log(test);\n    return test;\n  }\n\n  let test = play();\n  const episodes = (_one$episodes = one.episodes) === null || _one$episodes === void 0 ? void 0 : _one$episodes.map(el => {\n    return /*#__PURE__*/_jsxDEV(Player, {\n      title: el.title,\n      id: el.id,\n      setPlayer: i => setPlayer(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }); // const test = \n\n  const addEach = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eachOne\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: one.image,\n          alt: \"Podcast poster\",\n          id: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"podcast-title\",\n          children: one.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stars, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"podcast-desc\",\n          children: one.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Waveform, {\n        audio: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"episodes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Episodes Available: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: episodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 11\n  }, this);\n\n  useEffect(() => {\n    getEach();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: addEach\n  }, void 0, false);\n}\n\n_s(Podcast, \"EkOP2yf5Dc1Mm6MXiPbOxbfzvXo=\");\n\n_c = Podcast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Podcast\");","map":{"version":3,"sources":["/Users/admin/Desktop/dev/audiomaze/AudioMaze/client/src/Components/Podcast.js"],"names":["React","useEffect","useState","styled","Waveform","Player","Stars","Podcast","one","setEach","initial","current","setCurrent","getEach","response","fetch","data","json","console","log","setPlayer","episodes","play","test","map","el","title","id","i","addEach","image","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Container.css\";\nimport { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport Waveform from './Waveform.js'\nimport Player from \"./Player\";\nimport Stars from \"./Rating\";\n\nexport default function Podcast() {\n\n  const [one, setEach] = useState([]);\nconst initial = 1\n  const [current, setCurrent] = useState(initial)\n  // /=============================================/ API\n    const getEach =  async () => {\n      const response = await fetch(\"http://localhost:3001/podcasts/93\")\n      const data = await response.json()\n      setEach(data)\n      console.log(data)\n      return data\n      \n    \n     }\n     \n     \n    \n\n     function setPlayer(episodes) {\n     \n      setCurrent(episodes)\n      console.log(current)\n    }\n\n\n\n    function play () {\n      console.log('play is working')\n      const test = `https://www.listennotes.com/e/p/${current}/`\n      console.log(test)\n      return test;\n    }\n\n    let test = play()\n\n    const episodes  = \n    one.episodes?.map(el => {\n      \n      return (\n\n        <Player title={el.title} id={el.id} setPlayer={(i)=> setPlayer(i)}></Player>\n      )}\n     \n      )\n\n    \n\n    // const test = \n    const addEach =\n      \n(\n          <div className=\"eachOne\">\n          <div className=\"desc\">\n          <div className=\"poster\">\n            <img src={one.image} alt=\"Podcast poster\" id=\"post\"></img>\n          </div>\n          \n          <div className=\"title\">\n            <h1 id=\"podcast-title\">{one.title}</h1>\n            <Stars />\n            <p id=\"podcast-desc\">{one.description}</p>\n      \n          </div>\n        </div>\n        <div className=\"content\">\n          < Waveform audio={test}/>\n          <div className=\"episodes\"><h3>Episodes Available: </h3>\n          <ul>\n              {episodes}\n            </ul>\n            </div>\n        </div>\n        </div>\n        )\n    \n      \n  \n      \n     \n    useEffect(() => {\n      getEach()\n    }, [])\n\n  return (\n    <>\n   {addEach}\n    </>\n  )\n  }"]},"metadata":{},"sourceType":"module"}