{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/dev/audiomaze/AudioMaze/client/src/Components/Waveform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport WaveSurfer from 'wavesurfer.js';\nimport { FaPlayCircle, FaPauseCircle } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport \"./Waveform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Waveform = ({\n  audio\n}) => {\n  _s();\n\n  const containerRef = useRef();\n  const waveSurferRef = useRef({\n    isPlaying: () => false\n  });\n  const [isPlaying, toggleIsPlaying] = useState(false); // grid-template-columns: 100% 1fr;\n\n  useEffect(() => {\n    const waveSurfer = WaveSurfer.create({\n      container: containerRef.current,\n      responsive: true,\n      cursorWidth: 0,\n      barWidth: 2,\n      barHeight: 1,\n      waveColor: \"#FF3D00\"\n    });\n    waveSurfer.load(audio);\n    waveSurfer.on('ready', () => {\n      waveSurferRef.current = waveSurfer;\n    });\n    return () => {\n      waveSurfer.destroy();\n    };\n  }, [audio]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          waveSurferRef.current.playPause();\n          toggleIsPlaying(waveSurferRef.current.isPlaying());\n        },\n        className: \"playerButton\",\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPauseCircle, {\n          size: \"3em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlayCircle, {\n          size: \"3em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(Waveform, \"7x2w+s8FFxteEMzQHyqBAXFcTYM=\");\n\n_c = Waveform;\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired\n};\nexport default Waveform; // /type=\"button\"/ \n\nvar _c;\n\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"sources":["/Users/admin/Desktop/dev/audiomaze/AudioMaze/client/src/Components/Waveform.js"],"names":["React","useEffect","useRef","useState","PropTypes","WaveSurfer","FaPlayCircle","FaPauseCircle","styled","Waveform","audio","containerRef","waveSurferRef","isPlaying","toggleIsPlaying","waveSurfer","create","container","current","responsive","cursorWidth","barWidth","barHeight","waveColor","load","on","destroy","playPause","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,gBAAP;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC9B,QAAMC,YAAY,GAAGT,MAAM,EAA3B;AACA,QAAMU,aAAa,GAAGV,MAAM,CAAC;AAC7BW,IAAAA,SAAS,EAAE,MAAM;AADY,GAAD,CAA5B;AAGF,QAAM,CAACA,SAAD,EAAYC,eAAZ,IAA+BX,QAAQ,CAAC,KAAD,CAA7C,CALgC,CAOhC;;AAEEF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAGV,UAAU,CAACW,MAAX,CAAkB;AAEnCC,MAAAA,SAAS,EAAEN,YAAY,CAACO,OAFW;AAGnCC,MAAAA,UAAU,EAAE,IAHuB;AAInCC,MAAAA,WAAW,EAAE,CAJsB;AAKnCC,MAAAA,QAAQ,EAAE,CALyB;AAMnCC,MAAAA,SAAS,EAAE,CANwB;AAOnCC,MAAAA,SAAS,EAAE;AAPwB,KAAlB,CAAnB;AASAR,IAAAA,UAAU,CAACS,IAAX,CAAgBd,KAAhB;AACAK,IAAAA,UAAU,CAACU,EAAX,CAAc,OAAd,EAAuB,MAAM;AAC3Bb,MAAAA,aAAa,CAACM,OAAd,GAAwBH,UAAxB;AACD,KAFD;AAGA,WAAO,MAAM;AACXA,MAAAA,UAAU,CAACW,OAAX;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAAChB,KAAD,CAjBM,CAAT;AAmBA,sBACE;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACC;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEE,UAAAA,aAAa,CAACM,OAAd,CAAsBS,SAAtB;AACrBb,UAAAA,eAAe,CAACF,aAAa,CAACM,OAAd,CAAsBL,SAAtB,EAAD,CAAf;AACD,SAFH;AAGG,QAAA,SAAS,EAAC,cAHb;AAAA,kBAMEA,SAAS,gBAAG,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAN7C;AAAA;AAAA;AAAA;AAAA,cADD,eAUC;AAAK,QAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA,cAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADF;AAgBD,CA5CD;;GAAMF,Q;;KAAAA,Q;AA8CNA,QAAQ,CAACmB,SAAT,GAAqB;AACnBlB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,MAAV,CAAiBC;AADL,CAArB;AAIA,eAAerB,QAAf,C,CACA","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport WaveSurfer from 'wavesurfer.js'\nimport { FaPlayCircle, FaPauseCircle } from 'react-icons/fa'\nimport styled from 'styled-components'\nimport \"./Waveform.css\"\n\nconst Waveform = ({ audio }) => {\n  const containerRef = useRef()\n  const waveSurferRef = useRef({\n  isPlaying: () => false,\n})\nconst [isPlaying, toggleIsPlaying] = useState(false)\n  \n// grid-template-columns: 100% 1fr;\n\n  useEffect(() => {\n    const waveSurfer = WaveSurfer.create({\n      \n      container: containerRef.current,\n      responsive: true,\n      cursorWidth: 0,\n      barWidth: 2,\n      barHeight: 1,\n      waveColor: \"#FF3D00\",\n    })\n    waveSurfer.load(audio)\n    waveSurfer.on('ready', () => {\n      waveSurferRef.current = waveSurfer\n    })\n    return () => {\n      waveSurfer.destroy()\n    }\n  }, [audio])\n\n  return (\n    <>\n     <div className='player'>\n      <button onClick={() => { waveSurferRef.current.playPause()\n          toggleIsPlaying(waveSurferRef.current.isPlaying())\n        }}\n         className='playerButton'\n      >\n        {\n        isPlaying ? <FaPauseCircle size=\"3em\" /> : <FaPlayCircle size=\"3em\" />\n        }\n      </button>\n      <div ref={containerRef} />\n      </div>\n      </>\n  )\n}\n\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired,\n}\n\nexport default Waveform\n// /type=\"button\"/ "]},"metadata":{},"sourceType":"module"}